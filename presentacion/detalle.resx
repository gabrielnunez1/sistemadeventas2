<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnnuevaventa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAEsElEQVRIS9WUa1CUVRjHT6NR
        qTFjIYkQcdmAwQshCCsyWaggcVFBHBMMNeReEuASLRiyK+CyCiuwsOCypNzvcpdgWRYUeNdlubm7LKJZ
        1kw1zNSHPmx9eDrvgQijC+mHpjPz3zPz7rznd57n/39e9N+v1QgdFiLkHIVWO0aiZ8mzl8jv068DCWvQ
        1ak9iF1n+0bRoP+1qjtR9fyOfR4AgHxS51lPvAJY61DuyA70cY210+UBpqpGcwL6vsyELi3ni+yOPd5P
        BQk8a4j4w9sQq9rCiSdzVJVPHYH2WRZ0PWDDwKOcxyC+/wYSLjJE7/LWGsRLrI0SK82ZGVJ7lWTiALTM
        fEQAHbPJGJKyDLKiSljlDBQrfmW9aDAgXzIUoub02D0qGdsPjdMx0Kz7AO/R0Hbv7JNBApPXoisj7ojT
        vi20WOHzC1/uDELlW1CnCSeAsolDkKfcCfXa07iSJOi8/wncJJDclbUrVmSKjmcavpAtc24VjuwFTr8l
        fDZ5mADqtZFQPnUUisc8oWE6klRSqT4GFXePQoMuEuRfXfrnSthNr6OkWkumYNhtrnIyFDL67OGKYidU
        q09gyGkMiSAHV6nfg3zlLihU7SataptNxJCIv4cklJugdZvRqnPtDF6xygsbGgcSZRCc77WAPMWuRQit
        AqU78IbtoHUmAb79SY2lgZZ7cdCoi/rrdnGbXe1F/UFlWTKHOboVzboPgU5Optx+CeQkVN09DrmUM9zQ
        xUHnLBse/HALqG9KsfGJuGXB2JPUPzc+T+5VJVEcgZyhHVCreR8atFFQiQ+jIeI7AcCRMgikYioYBApX
        mPq+GbRzXfDwx2HsUyBumRtUa0KJ8X9I134agvgyJpUhswcB5YoBYYs9p0EN2ODLgy5wrseMQIpG90KL
        Lh4mv2sE6cOLkEM5gnD0TRJjOl2PRzj9Pg1BF/u2U9ny7cCVW4FI5YnTEbIIopWP+1447AW5g+7YeCaB
        CBQu5PDC0behRnMK6nB867RhS+aEjS+QAeVUWCfK7N1KlY0HQsHtfaQdGXIbctuyiQDSe3oXKndDmzoF
        LvTZkv8q8SVo8+txjBumo6BI5UFa1aSLJRNPp6tKHQL5/d7XEZ5Y6jr+1jTrzkCJ8h3I6t8C2HDgyhjA
        H3IAOlm0Ssa8gSd3xMZbLRr/WzvpcFybCiIBuTFzhgwmv9+lJ6nK2gad72ZQ9AN6Yuu04bhk/KI6Aht8
        iBxGJylrYN6j0nF/EFG+wJXOV/n7nNADGEOquTqGLyl1kLIqrRjcri0IfXrTghKP+ZKbkMnFonf6xWLs
        SfatrSAc8gROrw2k91kC/7YDZA84QVqPOYa4L0DCiW9Fo3uA22MnTax4jZHWYYPcg1fhKe4wlQkoFxzD
        YySeS0UbLh73I+aLRrEUPnBJzoR0qTWkdG2C1M83kYkn3yqFG6R1W0njK8wYqW2WyCPUYH7QEmpNTqV2
        m37N7bf+GRusXy7bZcJt07M7TfSspo365LaN+jTpq/rkVjNpKM94Mz6SHuHnseYJzIMvGpzMMXKKFhv5
        RYtfXplKjfxiJMZ+UcXGfmGCDf7hBRu8DyasN184eM2CnsN6But/vRD6FYAU2hpf9sPTAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABSKSURBVHhe7VsJXFTl+j4M2wyznXNmmIFh16JuXkvv
        3yxzu2a2Z/e2aXlbXBLXTMsl1Nwy19Ku61VMAUVQQAlFJdwVMEVxA9ncl9Qstf5lXfS973Pg0AGpMJeg
        +n6/53fOnPO87/s87/nON2eGQfhz1KLRVFdfIFEQJnj5u3/g6fQa6+XSTfF2lZ+9ekzx9hfAARcxiG2q
        q1d+9nc0oqVAYXpwI2GhyRGeKDoGp/kFLk0PDFmZ6nB9nGDx7RRjdkqLjHZhrhSiAPs4hnPggIsYxC40
        O8KnB92j5PxdjATZJcy3h+oSrM4O6+vdVljySBs6/+JT9E2n9nT2hSdoX8tmP6z0D06Lszjvirc4BQD7
        K13BaTgHDriIKXnk74QcyKXk5Nx1eixhA0slPyHe6nx8S3j4mfPt29B3999ORSEmyvH3plO3yfRD28Z0
        7JFWtCogZP1Cs9Mf4P0NOPbDg40VDriIQez5p9oQ5zqNnMiNGnV2QPwCs591lX/QulMtGtPZIBONMgjU
        wORDQSYjNfPU0TKTQN80cFFek3soUfYfAuQ1uVs5lsznwAEXMYg9G2SmU80bURrnRO4636A4i1+L7Hph
        F8+HyRRl9qB7m7Wg1we9S70jR9Pf/t6OGvjoKcci0Om/BBE3cg+AfRzDOXDARQxikQO5ssNCL8ZZ/VrU
        +QYlSK5/5bocV05JHvTOvU1oQtQi2rrvIGXlHaYZC5OpQaMmNEfPM8NhoAynf2mG01WKfRzDOXDARQxi
        kQO5kJNzd6r7DZJdL+ZYTJfX3h5C496bROt3FlDW/sMKVm7dRY+0f46iuBknzDpKl+zfA9jHMZwDR+Uj
        FjmQK8dqusy5O9bpBi2V/IVEi7NJYkDwF+/16EvLNmynzbuLaVNukbKdm7SKOjdvSdneAhX4uFOq6MhM
        lRyZ2Mex1/gcONoY5EAu5ERu1Kiz4512TwmDWzzkP+DViL3zktJofc4BWrsjj9bl5FPi2iwa0b0PrZYt
        VOQl0BaTqZRnQwSAfRzDOXDARQxikQO5kBO5UaNOjo49+wsP/rOj7qU+bw+eOHfRD2uy9tCa7D2Unr2X
        Ujfn0OgR4+iT4GDKdxco02CgZZIzMc4WKALLRGcijuEcOOAiBrHIgVzIidyogVp1anTs1V/o1Odt4YWI
        fk9ETpx2dtm6bErbsotWbtlJK9jo+GnzaMb/3UdbvfWUbrJeSJL85i62BQbG2wIEAPs4hnPggIsYxCIH
        ciEncqMGaqFmnRgv9hogdOjxpvBstz539Bk2dnfsJxn0ycbtlLLhM2U7fWHylb5dem1Y7AiamSj6DeeG
        tFpkD9LH2YPKMwgC9nEM58ABFzGI1eZCbtRALdRE7Vo/IPQfXXpauwwYumRabCIl8/qRlJGpbLF29Iwc
        ve2Zrr1DO/TsJwhEgjCjuDyymoFzzAEXMYhFDm1O1EAt1ETtWj2wFjz6YmcdT/lhY6ZF/Td+1UZKWL1J
        Aa72W2Mmn3q++xttcaWv5WqrfMQiB3KpeVEDtVATtWvtegRhWAv4Kj49cOyH5xYsX0OLVqxTAEPvfjjr
        Epvse+cDbdx+jQnEIBY5kAs51fyohZqoraxHta1JuLoQ9dzrfe/q+c7ofTMXLaPo5em0YNkaZTt+djS9
        2m/IvH907ulzPbeBcvtyDuRCTm0N1ERtaIAWaKo1A4Ke6dZb6tw/MmnC7Bial5hGUUtXKtsp8+PxOWor
        L6TBMHg9whGLHMiFnMitrYXa0AAttWYWQUj7VyPceWqPHDppeunsxSmkID6FpsUkUt/h75/gt+LWMHcj
        rqqaBzmRGzVQS60LDdACTb95kyD0X30H4qo+22/k+K8+il7Cb+NJND02SWkOrwvfMacnuDdSrJoLuVED
        tVATtaEBWqAJ2qDxNxkoDKHPR7zRsPugEXlYE6YuSKCp8xm8HTZ5Br38xqDZ/PZsuBlXEjmRGzVQS1sb
        WqAJ2sD7TZqEwrwgyq++OSRl+AczaXLUIpo0d6GyHfXRHDybbOLzgTejOeoo1xCIWqip1QBN0AaNN1ND
        tQMF+ep58L0+lp9LLo+btYCA8bOi8UxCEUNGHuU1ogV4N/PqqbMYtVATtaFB1QNt0Aitt6xJEIV7mwt2
        4CfbC7hyEAaM/vdc6jN87LfMeX3Q+1MU8Td7oAZqoSZqQ4OqB9qgEVpvyXqkXjFeABt1eWtoAX9YpBFT
        Zleg/6iJxFdsOk9r/a1ojjpQCzVRGxq0mqARWqEZvJvaJBTg6WznhXHlgNGT8JZagbfem4yHwfV83nUr
        m6OOcm0uaIAWrTZohWZov2na0Hn+LOT5Uu+3JvSKHHN58LippOLt9z6g194eVvJs34H3dmRe21ETyqNu
        3UBN1IYGaIEmrUZohnZ4uOZZtEAKEj6WgnWxcmB4vOT/3BKzb7cEk70CS0y2bklme9cB7V8Y0/Xt4Rf6
        j55IA8ZMUtCfr05EvyH0bst2aUt95K7gamNvJVAbGqAFmqDtR50TCdrhAV6q6oRneEcP0IsFcvnXL/Fy
        gLBQDjQkyv4DN8nikbwAW2lRk79SUbvWVPTogwpKGOlt21DvLr2o9/Cx9MaIcRXoPmQkzenZiwqfaHdF
        5f/WgBZogjatVmiHB3iBp4oYeGXP8I4eoBfoCXojZMg2Yans6r1dNl+62CiE/jukN5XO/Ygux/yHLsfO
        oSuM7DHDqX/vfvT64BHUa+iYCnQbPJLeHzaSzs2bqfDArw2AFmiCNmjUaoYHeIGnCs3sFZ7h/QL3AL1A
        T9AbIUYOcqWL8q7T9ex06b1I+j42ir6bNom+fX84fTcmko4PfYteeao9deo7kLpzchVdB71L/Xr1o/1D
        BtAl5n1bywBN0AaN0KrV/hJ7gSd4g0fFK3uGd/QAvUBP0BthkRzYcqvF9OWXj7Wib6ZOoC//+QidCfen
        0/5G+sKhpwzJi1o1a0GvDYjE2yWekKkztr36U2rjBnSWOadrKaANGqFV0cza4QFe4Ane4BFe4RnelR5w
        L9AT9EZYZAtsvtFiOXfmyYfo1AON6ahBKIOPQMeNAq3zFqhxWD16ocebeHSnV3jxe5GvQI+WrajApKNj
        zDvKvNoIaIPGCNYKzdAOD/ACT/AGj/Cq+kYP0Av0BL0RYm1BjpWSb3ZB/RAqMXpSMQcV639EPr9+1cud
        wu/5Gz3c8RV6rFMXata8NX1o0lNJFW5tBDRCKzRDOzzACzzBWyU+v0YP0Av0BL0RkvETElvAyxmi7eJu
        DsrzECohn5HpLtCbbm7U2mCgR41GmuCuo918DOeq8msboBFaoRna4QFe4Kk6/egBeoGeoDdCAr+VxdkC
        PZdI/p1TLfbdGUbL/68zmK4wSMWGcqwyGGkNYyNjveZ8bQe0QjO0w4PqpwrvCryjB+gFeoLeKCPWHiws
        8A11i7MH+cXKAQ/NEO07kkUfWiHp/xCAV3iGd/QAvUBPrhpTrA6B/HlWSY7phTZe4W3CHwLwCs/wjh78
        5EjiKcVPkXhwjMi3+dA3HPz17xzwCK/wDO/owc8O/N6G3/9bfSZbvr7AwX8EwCs81+i3RiBFy0FBG2S5
        +JzsRudl4SdxoZpjNcGtjEPMz8XBI7zCc40b9B85TJ8m+6afkNzpK0mgLzXA63OSGx2R+HlB5mch2YtO
        S7qreFWB82c57hA/vSLuEMfhdU3ikB91EIe6X9Qw7hTrL5a9lbhjkke1HHiEV3iucYN2SCZhmew3pVjy
        VhKd0+A0i9smWb7+RHbGJ8n+Q5k3jT/UFRUyV8urCgjcKEufL5f9ojguMkV2RvHrk0f5eHV8FUWcl/MX
        cp1/ox7qZknWi59z06rjA2j8Xsnn8hrZvjNZ9pvEccNXyI5VuZLxhy80PHiDR3iF5xo1CIMXLJC77JaM
        V86JvNKXA/v7JQN+rjt+llzPiz/MCQNt97jFykF/SZUdGcUiv/Np+CrOiG60RbJ+FScHPjPC1sBtvhws
        jLPd6cb3fbv1knz8c1FXbdwR0YNWyb7bOP9fLY4OuPWFmXI9fj5xDdolGUuriwH2SD5XuDFzmO9/SRSE
        xexnnhwicnNTDok8A8t58AOP8ArPNR7oJIt/IFOyXjhjZYPlOMvIEU2l8XLA82q38Z0JfvHO/AeZf1HL
        V2OOW3W0WrJnRtlCzWocYgb4NnbjmfRxCYsGr2rcbn4+YV7EUn53Ub6b4YF4bljDzZJ4VstXY05yrU8l
        2/5oOThIG7NBknBXfFAoeleqBY/wquqq0QA52hbsWivJBSetbnQav2NmnGHsE5UZNJiLKTwNP3CdJBdp
        +SrQoDWSPZsbZNHGMB+iJxdavZTc2hi83i6avmeTT6oxGNhnQ00zRet5LV+NOWj1pE8kR/x4+53u2lpz
        bGF6/nyVdtjqUcGHVniEV22NXxwgz7aFeSPhIYsHfc7JVBSxgBTJGT3UcbdOK2Aezw6eJVuPWnSV+MBx
        ixtlSPL+BbZghzYmXbIJfCtMzrd6XxUDZIvmbxfLAQ+qMRjY52NPfsbNqy4mz6onXnNGr5AcCleNibEF
        hXAzSk6wFpULb/AIr9oavzhAZkMQPzHP4k2nzNxtBrZHuAHciOz5tpCKfwPA9gPfO9xTJcfSYi6q8lWc
        MLvROlE6ApHamDTJFzXGamuowOtMUXk+aabGYOB249ddd1l9qo3JsRrx++mXtWsK4rmpD2dxw9UYbFEX
        HuFVW+MXB8gogEI7uOBJE0yW4TibXS9KJxfagu5Uk2K7URRxu3yYZ/EiLb8sRiA+f5pjGmhj+OqhQaP2
        s9CqMcBm0YovrRprY5ZLTn7a9R+216K/OoZfb7VaLvKbQXNtzDL+VM7LwpDdFkNFDLbwpjZT5dd4IIDF
        3bvJav3qGCc7rkGW1XyJ14YntElZNK5u/1wWAaFaPrClTPh9WuEryho0eh83qCofNTeI4ufc1Lu0MQVm
        DzRpRr7Z66qYoyZeU0TpUKwtKFQbM933Ng9el5YUmD0ruMgPb/Cocq9pICjGFuyXLtr2HzLqfvyWjrHL
        rCzUA5XvS8oH+AlywHPbLKZScCp9s8fItJgvYZprhfNahsaO2m3mB7kqMUeMym15jM3W18Z85Bvuwbdy
        UoHJo1IM9ktM/NAn2rd8bA81aWPgY00VH9iHN5xTudc0EDTbt74ni1l+gMUc8WHR5cgzlS3Ukf6N3bRC
        4myBzTbzTNFyAXyluc1iLOUGVjweYFt+u0TmcoPA0cYc4gZliHIJGwjUxsyzhxq5CZuLjO6V+EC5rpih
        V+tqzrOlki54gjd4VLnXNBC0UvQVkiS/sbkmbzpsYNGc+DCjyEeHK5W9wF55oebb4ba1VunYQR83hQe+
        EsOx280+xJzX1cUT/GVlDRq8y6SvyK/WKOEc6aKcx2/Bld75uGHONXwc56vWQB6e2cPQeDWGX2O/F+pX
        eOAtPMEbPKrcax4I5KveMctsLD3ESQ+Wo8TA97pVOsENCVeTYxttD7GtFm25aKDKBRCbUyZ+kHpbgl++
        eA7eyee0+QHk4Fw5fBEkbQ2ueftaq3iipAof8dAJvVp+v6D73bhh8/YavSpqVMf9VQPBPD0br7dYzylf
        gGuw2aws1I9pxczxreedKvquyjO4V+IeZOwyKldsHJ9XuACuLi/sg3cYDQpHG3PAoMzSrVXXE9Zz/0aL
        5YKWq2KDxXqezzfV8qPtwRLn2V7A+VQevMATvKncXzUQHGMP9l1lte05oNdV+gvADiPPCMnvfWqnFxKs
        ZVN6VEAjHV+txXsNnpW4wB4fT1ouOhbPsoV6JEg87aWyNShR8h+dw7lU4Sry2dBK0Z453x6ifDxJEBHj
        L3DsK5kmY6mWCxTq3ehTi3SEZ1gY+IuN9rKGSq6H1putF4o0XHiBJ3gD51cPBM903u6RIjoS9xg8qMib
        hTCwzecinzpdJxdLrqenCYJ7gtkhxJgcIXxP78rTu1dwVT5EZThdp5n/RDdBcEuUAoRYk289fuLdtk+T
        W0WBN9/GFvHLONHv8Z1t2gtrA+8SYg3y7StcoVv28C1ZlQ/wrLgYJ/o/luKqr+hf6GNrkOoK3ZRrMlTw
        sYUXeJrF3q67QZwIV3nkdh89FXqxcBWe3KTw+rS5dduzKfXvik5yhY1Ou7vJ5p0NG14pYBEVPA3y725A
        G1u3Pbk89I7ZyQH1xq5ufN/2XXeEX6mOi/x7/XxpXZNmR5YFh09NDqw/4dOmzffsbdWKCn08qucHB1BG
        k2aFyQH1J3LMR2vvb1m0976mVMi3vMqDB3iBJ3i7rgZhIAEvZs9uNpr+e4BFHOACCni/gIUebPkAFXfr
        RgU9etKhzq9RcWiA8vemCp6Wzw+Rh596nIp79qSCiB508LlnqNBXVM5Vyzd60sF2bakwIoIKOf/hlzpS
        UYCD8n+CXygZ6dDzz1Ihfm3SvTsd4lqFsrlyft6HF3i67uZgIAkvZg0/NYtn8jh5JeCPbZ5uVMAmi8IC
        6YBoKj/2E+Bz+d7uVOhyUFGIiw7wwl0jPjelKNhF+TXgI2dRSADX8FViq+Ozl9PwdMMaFMvPO6lWe1au
        pzvt54JXwZ2hK99Wd74qwKspF7hW/s9oyfVyp1Sr76YYe0jFVy/XNZBkvdGEB8aJWXo97ePCe+sooH2r
        wUBLJf9hKdbreECsOpAo3hbQMt0kfrXb3Y32cKG6iFwPfrYyy4cX2wIrPgDfkIGPB4t8g72TRWdMpree
        9vAU3l0Hsd5guswPppFjw1sonm7ooPCmQrTsaphise/N8vSiXDe+InUEu3RutFHvQ4miM36W7LKxHbcy
        VzdueDCMDJ+porNNktV361qDqTTLw5O2u7vTdp2uVuIz1rbV05tWG61fLxadUW+bbWHwwDAxvBk3bBgY
        5nIY+5rlsCjJr0eC1RGXbLFvXm6x5zB2lm9rA6BlB2vbECc6Z08X/Z5+SG/CzMFFVn2gSe6MGzL0DDWx
        mtzH6eFlfdjH4nzeKLpeMEkBtQUdGNDUxmB2mHXu0ItZo9UPoFk6xg0ZSIQpiZlUHdDA2ojqtKrAsvHn
        +HPc1CEI/wMNgw5pDuigrAAAAABJRU5ErkJggg==
</value>
  </data>
</root>